import 'SimplePDL.ecore'

package simplepdl

context Process
--
-- example invariant with a custom error message to verify that
-- the 'name' property of all 'simplepdl::Process' instances is non-null
--
inv NonNull_name('The \'name\' property of "' + self.toString() + '" is null'):
	name <> null
	
	
context WorkSequence
	--une dépendance ne peut pas être réflexive.
	inv notReflexive: self.predecessor <> self.successor
	
context WorkDefinition
	--deux sous-activités différentes d’un même processus ne peuvent pas avoir le même nom.
	inv WDuniqNames: self.Process.processElements
	->select(pe | pe.oclIsKindOf(WorkDefinition))
	->collect(pe | pe.oclAsType(WorkDefinition))
	->forAll(w | self = w or self.name <> w.name)

context WorkDefinition
	-- le nom d’une activité doit être composé d’au moins un caractère.
	inv WDnameIsDefined:
	if self.name.oclIsUndefined() then false 
	else self.name.size() > 0 endif

context Ressource
	--Le nom d’une resource doit être composé d’au moins un caractère.
	inv RnameIsDefined:
	if self.name.oclIsUndefined() then false 
	else self.name.size() > 0 endif
	
context Ressource
	--deux ressources ne peuvent pas avoir le même nom.
	inv RuniqNames: self.Process.processElements
	->select(r | r.oclIsKindOf(Ressource))
	->collect(r | r.oclAsType(Ressource))
	->forAll(r | self = r or self.name <> r.name)
	
context Ressource
	--la quantité d'une ressource doit être >= 0
	inv PositiveQ : self.quantite >= 0
	
context Ressource_Usage 
	--la quantité d'une ressource usé doit être > 0
	inv PositiveUQ : self.quantite > 0
	
context Ressource_Usage
	--la quantité d'un ressource utilisé par une activité doit être inferieur ou égale à la quantité disponible
	inv PossibleUsage : self.quantite <= self.used_ressource.quantite

endpackage